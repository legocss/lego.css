@use "sass:meta";
@use "./scss/normalize";
@use "./scss/for";
@use "./scss/mixin";
@use "./scss/func";
@use "./scss/color";
// @use "./scss/button";

@layer components {
    // https://www.answeroverflow.com/m/1141663903596687422
    @include meta.load-css("./scss/_button.scss")
}
:any-link {
    color: red;
}
body {
    font-size: 16px;
    font-family: "Arial", sans-serif;
    line-height: 1.5;
    color: #333;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


// 插值 #{}，用于将变量插入到字符串中
@mixin fontsizes($class, $small, $medium, $big) {
    .#{$class}-small { font-size: $small; }
    .#{$class}-medium { font-size: $medium; }
    .#{$class}-big { font-size: $big; }
}
@include fontsizes("header-text", 12px, 20px, 40px);

// 数字函数
// percentage($number) 将数字转换为百分比
// calc(+ - * /) 用于计算
// round($number) 四舍五入
// floor($number) 向下取整
// abs($number) 绝对值
// min($number…)
// max($number…)
// clamp($min, $number, $max) 多单位类型运算，获取范围内的数值，区间限制
// 算术操作符 + - * / %
ins {
    width: calc(100% - 100px);
    height: 100px;
    background-color: red;
}

// 反思函数
// type-of($value) 获取值的类型
// unit($number) 获取单位
// unitless($number) 判断是否有单位
// comparable($number1, $number2) 判断是否可以比较
// call($function, $args…) 调用函数
// get-function($name, $css: false) 获取函数
// inspect($value) 输出值
// variable-exists($name) 判断变量是否存在
// global-variable-exists($name) 判断全局变量是否存在
// function-exists($name) 判断函数是否存在
// mixin-exists($name) 判断混合器是否存在
// feature-exists($name) 判断特性是否存在
// keywords($args) 获取关键字参数
// content-exists() 判断是否有内容块
// unique-id() 获取唯一 ID


// 嵌套: & 父选择器 ,群组选择器 > 子选择器 ~ 同层全体选择器 + 同级相邻选择器
// 属性嵌套
.ins {
    font: {
        size: 16px;
        weight: bold;
    }
    &:hover {
        color: red;
    }
    & &-title {
        color: blue;
    }
    body & {
        color: green;
    }
}

// 占位符选择器 % @extend 继承
%border-style {
    border: 1px solid #000;
}
%clearfix, .clearfix {
    &::after {
        content: "";
        display: block;
        clear: both;
    }
}
ins {
    @extend %clearfix;
    @extend %border-style;
    @extend .ins;
}



// @layer
// https://www.zhangxinxu.com/wordpress/2022/05/css-layer-rule/
// https://css-tricks.com/css-cascade-layers/
// :any-link
// https://css-tricks.com/css-cascade-layers/
// flex vs grid
// https://css-tricks.com/smart-layouts-with-container-queries/
// https://bulma.io/
// clamp() 限制范围
// fit-content() 自适应
// https://www.zhangxinxu.com/wordpress/2020/04/css-min-max-clamp/

// https://developer.mozilla.org/zh-CN/docs/Web/CSS/:active
// https://github.com/chokcoco/iCSS/issues/171

/*
inherit 这个关键字是继承的意思
initial 是初始值关键字。可以把当前的CSS属性的计算值还原成CSS语法中的规定初始值
unset 是不固定值关键字，特性如下：
    如果当前使用的CSS属性具有继承特性，等同于 inherit关键字
    如果当前使用的CSS属性没有继承特性，等同于 initial关键字
revert 关键字可以让当前元素的样式还原成浏览器内置的样式
*/

/*
:is() 和 :where() 伪类选择器, 参数是一个选择器列表，支持逗号分隔，支持嵌套
:where() 的优先级总是为 0，而:is() 的优先级是由它的选择器列表中优先级最高的选择器决定的
从语法上，:is 和 :where 是一模一样的。它们的核心区别点在于 优先级
:not、:is、:where 这几个伪类不像其它伪类，它不会增加选择器的优先级。它的优先级即为它参数选择器的优先级
:has() 选择的不是 :has() 内包裹的选择器选中的元素，而是使用 :has() 伪类的宿主元素
*/